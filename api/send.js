export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ' });
  }
  const { name, phone, city, warehouse, payment } = req.body;
  const token = process.env.TELEGRAM_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;
  if (!token || !chatId) {
    return res.status(500).json({ error: '–ù–µ–º–∞—î —Ç–æ–∫–µ–Ω–∞ –∞–±–æ —á–∞—Ç—É' });
  }
  const message = `üõ° –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:\n\nüë§ –Ü–º‚Äô—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüèô –ú—ñ—Å—Ç–æ: ${city}\nüè§ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è: ${warehouse}\nüí≥ –û–ø–ª–∞—Ç–∞: ${payment}`;
  const telegramURL = `https://api.telegram.org/bot${token}/sendMessage`;
  try {
    const tgRes = await fetch(telegramURL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: chatId, text: message })
    });
    const data = await tgRes.json();
    if (data.ok) {
      res.status(200).json({ success: true });
    } else {
      res.status(500).json({ error: 'Telegram error', details: data });
    }
  } catch (err) {
    res.status(500).json({ error: 'Fetch error', details: err.message });
  }
}